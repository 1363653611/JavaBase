装饰者模式：
	定义：动态给一个对象添加一些额外的职责，就像在墙上刷油漆，适用Decorator模式相比用生成子类方式达到功能扩充显得更为灵活
	设计初衷：通常可以用继承来实现功能的扩展，如果需要扩展的种类很繁多，那么势必生成很多子类，增加系统的复杂性。
	同时，使用继承实现功能扩展，我们必须可预见这些拓展的功能，这些功能是编译是就确定了，是静态的。
	
要点：
	装饰者与被装饰者拥有共同的超类，继承的目的是集成类型，而不是行为。
	实际上java的I/O API 就是使用Decorator来实现的