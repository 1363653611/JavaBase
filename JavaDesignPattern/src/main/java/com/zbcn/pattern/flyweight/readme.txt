享元模式：

解释一下概念：
在一个系统中有多个相同的对象，那么只共享一份就可以了，不必每个都实例化一份对象。比如说一个文本系统，每个字母肯定是一个对象，那么大小写
字母总共是52个，那么就要定义52个对象了。如果有1M的文本，那么字母是何其多的，如果每个字母都定义一个对象，那么内存早就泄漏。如果每个字母都共享
一个对象，那么就大大的节约了资源。
    在flyWeight 模式中，由于要产生各种各样的对象，所以在FlyWeight模式中，长出现Factory模式，
    Flyweight的内部状态是用来共享的，Flyweight factory负责维护一个对象存储池（Flyweight Pool）来存放内部状态的对象。
    Flyweight模式是一个提高程序效率和性能的模式,会大大加快程序的运行速度.应用场合很多

    可以共享的对象，也就是说返回的同一类型的对象其实是同一实例，当客户端要求生成一个对象时，工厂会检测是否存在此对象的实例，
    如果存在那么直接返回此对象实例，如果不存在就创建一个并保存起来，这点有些单例模式的意思。通常工厂类会有一个集合类型的成员变量来用以保存对象，如hashtable,vector等。
    在java中，数据库连接池，线程池等即是用享元模式的应用。

